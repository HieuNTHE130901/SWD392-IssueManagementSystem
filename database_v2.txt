-- Create the database
CREATE DATABASE issue_management_system;

-- Switch to the newly created database
USE issue_management_system;

-- Create the User table
CREATE TABLE User (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    full_name VARCHAR(255),
    email VARCHAR(255),
    mobile VARCHAR(20),
    password VARCHAR(255),
    avatar_image VARCHAR(255),
    verification_code VARCHAR(255),
    is_verified TINYINT(1),
    user_role VARCHAR(50)
);

-- Create the Project table
CREATE TABLE Project (
    project_id INT PRIMARY KEY AUTO_INCREMENT,
    project_code VARCHAR(50),
    project_name VARCHAR(255),
    description TEXT
);

-- Create the ProjectMember table
CREATE TABLE ProjectMember (
    project_id INT,
    user_id INT,
    is_team_leader TINYINT(1),
    FOREIGN KEY (project_id) REFERENCES Project(project_id),
    FOREIGN KEY (user_id) REFERENCES User(user_id)
);

-- Create the Issue table
CREATE TABLE Issue (
    issue_id INT PRIMARY KEY AUTO_INCREMENT,
    project_id INT,
    issue_type VARCHAR(50),
    issue_status VARCHAR(50),
    issue_description TEXT,
    created_by INT,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT,
    updated_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (project_id) REFERENCES Project(project_id),
    FOREIGN KEY (created_by) REFERENCES User(user_id),
    FOREIGN KEY (updated_by) REFERENCES User(user_id)
);

-- Create the Milestone table
CREATE TABLE Milestone (
    milestone_id INT PRIMARY KEY AUTO_INCREMENT,
    project_id INT,
    milestone_title VARCHAR(255),
    milestone_description TEXT,
    start_date DATE,
    end_date DATE,
    FOREIGN KEY (project_id) REFERENCES Project(project_id)
);

-- Create the Class table
CREATE TABLE Class (
    class_id INT PRIMARY KEY AUTO_INCREMENT,
    class_code VARCHAR(50),
    class_name VARCHAR(255),
    status VARCHAR(50)
);

-- Create the ClassMember table
CREATE TABLE ClassMember (
    class_id INT,
    user_id INT,
    group_name VARCHAR(255),
    FOREIGN KEY (class_id) REFERENCES Class(class_id),
    FOREIGN KEY (user_id) REFERENCES User(user_id)
);

-- Create the ClassMilestone table
CREATE TABLE ClassMilestone (
    class_id INT,
    milestone_id INT,
    FOREIGN KEY (class_id) REFERENCES Class(class_id),
    FOREIGN KEY (milestone_id) REFERENCES Milestone(milestone_id)
);

-- Create the Subject table
CREATE TABLE Subject (
    subject_id INT PRIMARY KEY AUTO_INCREMENT,
    subject_code VARCHAR(50),
    subject_name VARCHAR(255),
    description TEXT,
    gitlab_config TEXT
);

-- Create the Assignment table (formerly SubjectAssignment)
CREATE TABLE Assignment (
    subject_id INT,
    class_id INT,
    FOREIGN KEY (subject_id) REFERENCES Subject(subject_id),
    FOREIGN KEY (class_id) REFERENCES Class(class_id)
);

-- Create the SystemSettings table
CREATE TABLE SystemSettings (
    setting_id INT PRIMARY KEY AUTO_INCREMENT,
    setting_name VARCHAR(255),
    setting_value TEXT
);

-- Insert sample records into the User table
INSERT INTO User (full_name, email, mobile, password, avatar_image, verification_code, is_verified, user_role)
VALUES
('admin', 'admin@admin.admin', '999999999', '999999999', 'avatar1.jpg', 'ABC123', 1, 'Admin'),
 ('manager', 'manager@manager.manager', '88888888', '88888888', 'avatar1.jpg', 'ABC123', 1, 'Manager'),
 ('teacher', 'teacher@teacher.teacher', '7777777', '7777777', 'avatar1.jpg', 'ABC123', 1, 'Teacher'),
 ('student', 'student@student.student', '666666', '666666', 'avatar1.jpg', 'ABC123', 1, 'Student'),
    ('John Doe', 'john@example.com', '1234567890', 'password1', 'avatar1.jpg', 'verification_code1', 1, 'User'),
    ('Jane Smith', 'jane@example.com', '9876543210', 'password2', 'avatar2.jpg', 'verification_code2', 1, 'User'),
    ('Alice Johnson', 'alice@example.com', '5551234567', 'password3', 'avatar3.jpg', 'verification_code3', 1, 'User'),
    ('Bob Wilson', 'bob@example.com', '4567890123', 'password4', 'avatar4.jpg', 'verification_code4', 1, 'Admin'),
    ('Eve White', 'eve@example.com', '7890123456', 'password5', 'avatar5.jpg', 'verification_code5', 0, 'User');

 


-- Insert sample records into the Project table
INSERT INTO Project (project_code, project_name, description)
VALUES
    ('PRJ1', 'Project 1', 'Description of Project 1'),
    ('PRJ2', 'Project 2', 'Description of Project 2'),
    ('PRJ3', 'Project 3', 'Description of Project 3'),
    ('PRJ4', 'Project 4', 'Description of Project 4'),
    ('PRJ5', 'Project 5', 'Description of Project 5');


-- Insert sample records into the ProjectMember table
INSERT INTO ProjectMember (project_id, user_id, is_team_leader)
VALUES
    (1, 1, 1),
    (1, 2, 0),
    (2, 2, 1),
    (2, 3, 0),
    (3, 4, 1);


-- Insert sample records into the Issues table
INSERT INTO Issue (project_id, issue_type, issue_status, issue_description, created_by, updated_by)
VALUES
    (1, 'Bug', 'Open', 'Description of Issue 1', 1, 1),
    (1, 'Feature', 'In Progress', 'Description of Issue 2', 2, 2),
    (2, 'Bug', 'Resolved', 'Description of Issue 3', 3, 3),
    (3, 'Task', 'Open', 'Description of Issue 4', 4, 4),
    (4, 'Feature', 'In Progress', 'Description of Issue 5', 1, 1);



-- Insert sample records into the Milestones table
INSERT INTO Milestone (project_id, milestone_title, milestone_description, start_date, end_date)
VALUES
    (1, 'Milestone 1', 'Description of Milestone 1', '2023-10-10', '2023-10-20'),
    (2, 'Milestone 2', 'Description of Milestone 2', '2023-11-05', '2023-11-15'),
    (3, 'Milestone 3', 'Description of Milestone 3', '2023-12-01', '2023-12-10'),
    (4, 'Milestone 4', 'Description of Milestone 4', '2023-12-20', '2023-12-30'),
    (5, 'Milestone 5', 'Description of Milestone 5', '2023-11-20', '2023-11-30');


-- Insert sample records into the Classes table
INSERT INTO Class (class_code, class_name, status)
VALUES
    ('C1', 'Class 1', 'Active'),
    ('C2', 'Class 2', 'Active'),
    ('C3', 'Class 3', 'Inactive'),
    ('C4', 'Class 4', 'Active'),
    ('C5', 'Class 5', 'Active');

-- Insert sample records into the ClassMembers table
INSERT INTO ClassMember (class_id, user_id, group_name)
VALUES
    (1, 1, 'Group A'),
    (1, 2, 'Group B'),
    (2, 3, 'Group A'),
    (2, 4, 'Group B'),
    (3, 5, 'Group A');


-- Insert sample records into the ClassMilestones table
INSERT INTO ClassMilestone (class_id, milestone_id)
VALUES
    (1, 1),
    (1, 2),
    (2, 2),
    (3, 4),
    (4, 3);


-- Insert sample records into the Subject table
INSERT INTO Subject (subject_code, subject_name, description, gitlab_config)
VALUES
    ('S1', 'Subject 1', 'Description of Subject 1', 'GitLabConfig1'),
    ('S2', 'Subject 2', 'Description of Subject 2', 'GitLabConfig2'),
    ('S3', 'Subject 3', 'Description of Subject 3', 'GitLabConfig3'),
    ('S4', 'Subject 4', 'Description of Subject 4', 'GitLabConfig4'),
    ('S5', 'Subject 5', 'Description of Subject 5', 'GitLabConfig5');

-- Insert sample records into the SubjectAssignments table
INSERT INTO Assignment (subject_id, class_id)
VALUES
    (1, 1),
    (1, 2),
    (2, 2),
    (3, 4),
    (4, 3);


-- Insert sample records into the SystemSettings table
INSERT INTO SystemSettings (setting_name, setting_value)
VALUES
    ('Setting 1', 'Value 1'),
    ('Setting 2', 'Value 2'),
    ('Setting 3', 'Value 3'),
    ('Setting 4', 'Value 4'),
    ('Setting 5', 'Value 5');
